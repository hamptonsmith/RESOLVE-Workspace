Concept Queue_Template(type Entry; evaluates Max_Length: Integer);
    uses String_Theory;
    requires Max_Length > 0;
 
    Type Family Queue is modeled by Str(Entry);
    exemplar Q;
    constraint |Q| <= Max_Length;
    initialization ensures Q = Empty_String;
 
    Operation Enqueue(alters E: Entry; updates Q: Queue);
        requires |Q| < Max_Length;
        ensures Q = #Q o <#E>;
 
    Operation Dequeue(replaces R: Entry; updates Q: Queue);
        requires |Q| /= 0;
        ensures #Q = <R> o Q;

    Operation Swap_First_Entry(updates E: Entry; updates Q: Queue);
        requires |Q| /= 0;
        ensures E = Element_At(0, #Q) and Q = <#E> o Substring(#Q, 1, |#Q| - 1);

    Operation Length(restores Q: Queue): Integer;
     ensures Length = (|Q|);
 
    Operation Rem_Capacity(restores Q: Queue): Integer;
        ensures Rem_Capacity = (Max_Length - |Q|);
 
    Operation Clear(clears Q: Queue);
 
end Queue_Template;
